type: checkiO
files:
- name: mission.py
  visible: true
  text: "def end_zeros(num: int) -> int:\n    count = 0\n    a = str(num)\n    \n\
    \    for i in a[::-1]:\n        if i == '0':\n            count += 1\n       \
    \ else:\n            break\n    return count\n\n\nif __name__ == '__main__':\n\
    \    print(\"Example:\")\n    print(end_zeros(0))\n\n    # These \"asserts\" are\
    \ used for self-checking and not for an auto-testing\n    assert end_zeros(0)\
    \ == 1\n    assert end_zeros(1) == 0\n    assert end_zeros(10) == 1\n    assert\
    \ end_zeros(101) == 0\n    assert end_zeros(245) == 0\n    assert end_zeros(100100)\
    \ == 2\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def end_zeros(num: int) -> int:\n    count = 0\n    a = str(num)\n    \n  \
  \  for i in a[::-1]:\n        if i == '0':\n            count += 1\n        else:\n\
  \            break\n    return count\n\n\nif __name__ == '__main__':\n    print(\"\
  Example:\")\n    print(end_zeros(0))\n\n    # These \"asserts\" are used for self-checking\
  \ and not for an auto-testing\n    assert end_zeros(0) == 1\n    assert end_zeros(1)\
  \ == 0\n    assert end_zeros(10) == 1\n    assert end_zeros(101) == 0\n    assert\
  \ end_zeros(245) == 0\n    assert end_zeros(100100) == 2\n    print(\"Coding complete?\
  \ Click 'Check' to earn cool rewards!\")\n"
seconds_from_change: 5348623
